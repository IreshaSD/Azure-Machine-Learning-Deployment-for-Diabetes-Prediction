# -*- coding: utf-8 -*-
"""Copy of deploy ML model on Azure.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13VGJuNpryNMVoxGUIVuthVRC2B5Ronkn
"""

!pip install azureml-sdk  # Installs the Azure Machine Learning SDK package
!pip install python-dotenv

import os  # Importing the os module to access files and environment variables
import json  # Importing the json module to work with JSON data
import requests  # Importing the requests module to make HTTP requests

from azureml.core import Workspace  # Importing Workspace from azureml.core to create an Azure Machine Learning workspace
from azureml.core import Model  # Importing Model from azureml.core to work with machine learning models
from azureml.core.environment import Environment  # Importing Environment from azureml.core to create a virtual environment
from azureml.core.conda_dependencies import CondaDependencies  # Importing CondaDependencies from azureml.core to manage dependencies
from azureml.core.model import InferenceConfig  # Importing InferenceConfig from azureml.core to configure inference
from azureml.core.webservice import AciWebservice, Webservice  # Importing AciWebservice and Webservice from azureml.core to deploy web services

# ----------------------------------------------------------------------------------------------------------------------------#
# # Path to the configuration file
# config_file_path = "config.json"

# # Reading JSON data from the configuration file
# with open(config_file_path, 'r') as file:
#     data = json.load(file)  # Loading JSON data into a dictionary

# # Extracting information from the JSON data
# subscription_id = data["subscription_id"]
# resource_group = data["resource_group"]
# workspace_name = data["workspace_name"]
# region = data["region"]

# ----------------------------------------------------------------------------------------------------------------------------#
import os
import dotenv
from dotenv import load_dotenv

# Load environment variables from .env file
load_dotenv()

# Access environment variables
subscription_id = os.getenv("subscription_id")
resource_group = os.getenv("resource_group")
workspace_name = os.getenv("workspace_name")
region = os.getenv("region")


# print(subscription_id)
# print(resource_group)
# print(workspace_name)
# print(region)

# Creating an Azure Machine Learning workspace
ws = Workspace.create(name=workspace_name,
                      subscription_id=subscription_id,
                      resource_group=resource_group,
                      location=region)



print(f'Workspace {workspace_name} created')

# Path to the model file
model_path = 'Diabetes_Pipeline.pkl'

model_name = 'Diabetes_Prediction_Model'  # Name of the model

# Registering the model in Azure Machine Learning
registered_model = Model.register(model_path=model_path, model_name=model_name, workspace=ws)

# Creating a Conda environment for the scikit-learn model
conda_env = Environment('my-conda-env')
conda_env.python.conda_dependencies = CondaDependencies.create(conda_packages=['scikit-learn'])

# Creating an InferenceConfig
inference_config = InferenceConfig(entry_script='score.py', environment=conda_env)

# Specifying deployment configuration for Azure Container Instances (ACI)
aci_config = AciWebservice.deploy_configuration(cpu_cores=1, memory_gb=1)

# Deploying the model as a web service
service = Model.deploy(workspace=ws,
                       name='diabetes-prediction-service',
                       models=[registered_model],
                       inference_config=inference_config,
                       deployment_config=aci_config)
service.wait_for_deployment(show_output=True)

scoring_uri = service.scoring_uri  # Getting the scoring URI of the deployed service

scoring_uri  # Returning the scoring URI

#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#

# # This code snippet performs the following tasks:

# # Installs the Azure Machine Learning SDK package.
# # Imports necessary modules and packages required for working with Azure Machine Learning, handling files, and making HTTP requests.
# # Reads configuration data from a JSON file (config.json) containing subscription details, resource group information, workspace name, and region.
# # Creates an Azure Machine Learning workspace using the provided subscription details, resource group, workspace name, and region.
# # Registers a machine learning model (Diabetes_Pipeline.pkl) in the Azure Machine Learning workspace.
# # Defines a Conda environment (my-conda-env) with scikit-learn as a dependency.
# # Creates an inference configuration for the model, specifying the entry script (score.py) and the environment.
# # Specifies deployment configuration for Azure Container Instances (ACI), including CPU cores and memory.
# # Deploys the model as a web service using Azure Container Instances.
# # Retrieves the scoring URI of the deployed service.
#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#


# **Cleaning up all the created resources**

# # Delete the service

# service_name = "diabetes-prediction-service"

# service = ws.webservices[service_name]
# service.delete()

# # Specify the name of the registered model to delete
# model_name = 'diabetes_prediction_model'

# # Delete the model
# registered_model = ws.models[model_name]
# registered_model.delete()

# # Delete the workspace
# ws.delete(delete_dependent_resources=True)

